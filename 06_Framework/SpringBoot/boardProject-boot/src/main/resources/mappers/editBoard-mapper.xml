<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="edu.kh.project.board.model.mapper.EditBoardMapper">
	
	<!-- 게시글 삭제 -->
	<update id="deleteBoard">
		UPDATE "BOARD" SET
		BOARD_DEL_FL = 'Y'
		WHERE BOARD_CODE = #{boardCode}
		AND BOARD_NO = #{boardNo}
		AND MEMBER_NO = #{memberNo}
	</update>

	<!-- 게시글 작성 -->
	<!-- 
		useGeneratedKeys 속성 : DB 내부적으로 생성한 키 (시퀀스)를
                  전달된 파라미터의 필드로 대입 가능 여부 지정
      
		** 동적 SQL **
		- 프로그램 수행 중 SQL을 변경하는 기능 (마이바티스의 가장 강력한 기능)
      
		<selectKey> 태그 : INSERT/UPDATE 시 사용할 키(시퀀스)를
                  조회해서 파라미터의 지정된 필드에 대입
      
		order 속성 : 메인 SQL이 수행되기 전/후에 selectkey가 수행되도록 지정
		전 : BEFORE
		후 : AFTER
      
		keyProperty 속성 : selectKey 조회 결과를 저장할 파라미터의 필드
	-->
   
	<insert id="insertBoard" parameterType="Board" useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO "BOARD" VALUES(#{boardNo}, #{boardTitle}, #{boardContent}, DEFAULT, DEFAULT, DEFAULT, DEFAULT, #{memberNo}, #{boardCode})
	</insert>
	
	<!-- 동적 SQL 중 <foreach> 
		- 특정 SLQ 구문을 반복할 때 사용
		- 반복되는 사이에 구분자(separator)를 추가할 수 있음.
      
		collection : 반복할 객체의 타입 작성(list, set, map...)
		item : collection에서 순차적으로 꺼낸 하나의 요소를 저장하는 변수
		index : 현재 반복 접근중인 인덱스 (0,1,2,3,4 ..)
      
		open : 반복 전에 출력할 sql
		close : 반복 종료 후에 출력한 sql
			      
		separator : 반복 사이사이 구분자
	-->
	
	<!-- 업로드된 게시글 이미지 일괄 삽입-->
	<insert id="insertUploadList" parameterType="list">
		
		INSERT INTO "BOARD_IMG"
		<foreach collection="list" item="img" separator="UNION">
			SELECT NEXT_IMG_NO(), #{img.imgPath}, #{img.imgRename}, #{img.imgOriginalName},
			#{img.imgOrder}, #{img.boardNo} 
			FROM DUAL
		</foreach>
		
	</insert>
	
	<!-- 게시글 부분만 수정 -->
	<update id="updateBoard">
		UPDATE "BOARD" SET
		BOARD_TITLE = #{boardTitle}, BOARD_CONTENT = #{boardContent}, BOARD_UPDATE_DATE = SYSDATE
		WHERE BOARD_CODE = #{boardCode}
		AND BOARD_NO = #{boardNo}
	</update>
	
	<!-- 이미지 삭제 -->
	<delete id="imageDelete">
		DELETE FROM BOARD_IMG WHERE BOARD_NO = #{boardNo}
		AND IMG_ORDER IN(${deleteOrder})
	</delete>
	
	<!-- 이미지 하나 수정 -->
	<update id="updateBoardImg">
		UPDATE "BOARD_IMG" SET
		IMG_PATH = #{imgPath}, IMG_RENAME = #{imgRename}, IMG_ORIGINAL_NAME = #{imgOriginalName}
		WHERE BOARD_NO = #{boardNo}
		AND IMG_ORDER = #{imgOrder}
	</update>
	
	<!-- 이미지 하나 삽입 -->
	<insert id="boardImgInsert">
		INSERT INTO "BOARD_IMG"
      	VALUES(SEQ_IMG_NO.NEXTVAL, #{imgPath}, #{imgRename}, #{imgOriginalName}, #{imgOrder}, #{boardNo})
	</insert>
</mapper>